{# templates/groupeTesteurs/list.html.twig #}

{% extends 'index.html.twig' %}

{% block title %}Liste des Groupe Testeurs{% endblock %}

{% block body %}
    <h1>Liste des Groupe Testeurs</h1>

    {# Search form with input and button #}
    <form id="searchForm">
        <label for="search">Rechercher :</label>
        <input type="text" id="search" name="search">
        <button type="button" onclick="performSearch()">Rechercher</button>
    </form>

    {# Table to display Groupe Testeurs details #}
    <table id="groupeTesteursTable">
        <!-- Table header -->
        <thead>
            <tr>
                <th>ID</th>
                <th>Label</th>
                <th>Description</th>
                <th>Actions</th>
            </tr>
        </thead>
        <!-- Table body will be populated using JavaScript -->
        <tbody id="groupeTesteursTableBody"></tbody>
    </table>

    {# Add link to add new Groupe Testeur #}
    <a href="{{ path('groupe_testeurs_add') }}">Ajouter</a>

    <script>
        // Function to initialize the table with values
        function initializeTable() {
            // Use AJAX to fetch data for the initial table
            const xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function () {
                if (xhr.readyState === XMLHttpRequest.DONE) {
                    if (xhr.status === 200) {
                        // Parse the JSON response
                        const responseData = JSON.parse(xhr.responseText);

                        // Update the table with initial data
                        updateTable(responseData.groupeTesteurs);
                    } else {
                        // Handle errors
                        console.error('Initial data request failed');
                    }
                }
            };

            // Send a GET request to the Symfony endpoint
            xhr.open('GET', `{{ path('groupe_testeurs_list') }}`, true);
            xhr.send();
        }

        // Function to perform search
        function performSearch() {
            // Get the search query from the input field
            const searchQuery = document.getElementById('search').value;

            // Use AJAX to fetch filtered data
            const xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function () {
                if (xhr.readyState === XMLHttpRequest.DONE) {
                    if (xhr.status === 200) {
                        // Parse the JSON response
                        const responseData = JSON.parse(xhr.responseText);

                        // Update the table with filtered data
                        updateTable(responseData.groupeTesteurs);
                    } else {
                        // Handle errors
                        console.error('Search request failed');
                    }
                }
            };

            // Send a GET request to the Symfony endpoint with the search query
            xhr.open('GET', `{{ path('groupe_testeurs_list') }}?search=${searchQuery}`, true);
            xhr.send();
        }

        // Function to update the table
        function updateTable(groupeTesteurs) {
            // Get the table body element
            const tableBody = document.getElementById('groupeTesteursTableBody');

            // Clear existing rows
            tableBody.innerHTML = '';

            // Iterate over the data and add rows to the table
            groupeTesteurs.forEach(function (groupeTesteur) {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${groupeTesteur.getId()}</td>
                    <td>${groupeTesteur.getGroupTesteurLabel()}</td>
                    <td>${groupeTesteur.getGroupTesteurDescription()}</td>
                    <td>
                        <a href="/groupe_testeurs_delete/${groupeTesteur.getId()}">Supprimer</a>
                        <a href="/groupe_testeurs_edit/${groupeTesteur.getId()}">Modifier</a>
                    </td>
                `;
                tableBody.appendChild(row);
            });
        }

        // Call initialization function when the page loads
        window.onload = initializeTable;
    </script>
{% endblock %}
